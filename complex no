Create a Complex class with real and imaginary parts. 
Functions: add(Complex c) subtract(Complex c) Return the new Complex object from each function.



#include <iostream>
using namespace std;

class Complex {
    float real, imag;

public:
    // Default constructor
    Complex() {
        real = 0;
        imag = 0;
    }

    // Parameterized constructor
    Complex(float r, float i) {
        real = r;
        imag = i;
    }

    // Function to add two complex numbers
    Complex add(Complex c) {
        return Complex(real + c.real, imag + c.imag);
    }

    // Function to subtract two complex numbers
    Complex subtract(Complex c) {
        return Complex(real - c.real, imag - c.imag);
    }

    // Function to display
    void display() {
        cout << real << " + " << imag << "i" << endl;
    }
};

int main() {
    float r1, i1, r2, i2;

    cout << "Enter real and imaginary part of first number: ";
    cin >> r1 >> i1;
    cout << "Enter real and imaginary part of second number: ";
    cin >> r2 >> i2;

    Complex c1(r1, i1);  // using constructor
    Complex c2(r2, i2);

    Complex sum = c1.add(c2);
    Complex diff = c1.subtract(c2);

    cout << "\nSum = ";
    sum.display();
    cout << "Difference = ";
    diff.display();

    return 0;
}
